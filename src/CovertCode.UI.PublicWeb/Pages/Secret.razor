@page "/secret"
@using Grpc.Net.Client;
@inject NavigationManager NavigationManager
@{ 
    var accessCode = NavigationManager.Uri
        .Replace(NavigationManager.BaseUri, string.Empty)
        .Replace("/secret/", string.Empty);

    accessCode = GetQueryStringParm("Id");

    var result = GetCovertCodeByAccessCode(accessCode);
    var found = (result.Value.Length > 0);

}
<h1>Retrieve Secret</h1>
<h3>
    CovertCode allows you to share information, without context, for a single time.
    It will be only be accessible once and will be destroyed.
</h3>
<div>
    @if (found)
    {
        <p>
            Your secret is listed below.  Please make a copy because you can not view it again.
            <textarea class="form-control" value="@result.Value" />
        </p>
    }
    else
    {
        <p>The secret you requested was not found.</p>
        <Create />
    }
</div>

@code 
{
    // blazor: get query parm from url
    string GetQueryStringParm(string parmName)
    {
        var uriBuilder = new UriBuilder(NavigationManager.Uri);
        var q = System.Web.HttpUtility.ParseQueryString(uriBuilder.Query);
        return q[parmName] ?? "";
    }

    GetByAccessPhraseResponse GetCovertCodeByAccessCode(string accessCode)
    {
        var result = new GetByAccessPhraseResponse();
        var channel = GrpcChannel.ForAddress("https://localhost:5001");
        var client = new SecretManager.SecretManagerClient(channel);
        var request = new GetByAccessPhraseRequest()
        {
            AccessPhrase = accessCode.Trim()
        };
        var response = client.GetByAccessPhrase(request);
        return response;
    }
}